"""
This type stub file was generated by pyright.
"""

from torch.autograd import Function
from torch.autograd.function import once_differentiable
from torch.distributions.exp_family import ExponentialFamily

"""
This type stub file was generated by pyright.
"""
class _Dirichlet(Function):
    @staticmethod
    def forward(ctx, concentration):
        ...
    
    @staticmethod
    @once_differentiable
    def backward(ctx, grad_output):
        ...
    


class Dirichlet(ExponentialFamily):
    r"""
    Creates a Dirichlet distribution parameterized by concentration :attr:`concentration`.

    Example::

        >>> m = Dirichlet(torch.tensor([0.5, 0.5]))
        >>> m.sample()  # Dirichlet distributed with concentrarion concentration
        tensor([ 0.1046,  0.8954])

    Args:
        concentration (Tensor): concentration parameter of the distribution
            (often referred to as alpha)
    """
    arg_constraints = ...
    support = ...
    has_rsample = ...
    def __init__(self, concentration, validate_args=...) -> None:
        ...
    
    def expand(self, batch_shape, _instance=...):
        ...
    
    def rsample(self, sample_shape=...):
        ...
    
    def log_prob(self, value):
        ...
    
    @property
    def mean(self):
        ...
    
    @property
    def variance(self):
        ...
    
    def entropy(self):
        ...
    


